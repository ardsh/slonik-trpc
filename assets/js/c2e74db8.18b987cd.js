"use strict";(self.webpackChunkslonik_trpc_docs=self.webpackChunkslonik_trpc_docs||[]).push([[408],{3905:(t,e,r)=>{r.d(e,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var l=n.createContext({}),c=function(t){var e=n.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},u=function(t){var e=c(t.components);return n.createElement(l.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},g=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,a=t.originalType,l=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),p=c(r),g=o,f=p["".concat(l,".").concat(g)]||p[g]||d[g]||a;return r?n.createElement(f,i(i({ref:e},u),{},{components:r})):n.createElement(f,i({ref:e},u))}));function f(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=r.length,i=new Array(a);i[0]=g;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[p]="string"==typeof t?t:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},2854:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:6},i="Usage with tRPC",s={unversionedId:"tutorial-getting-started/trpc",id:"tutorial-getting-started/trpc",title:"Usage with tRPC",description:"Add a query that uses getLoadArgs and loadPagination from the postsLoader to return data",source:"@site/docs/tutorial-getting-started/trpc.md",sourceDirName:"tutorial-getting-started",slug:"/tutorial-getting-started/trpc",permalink:"/docs/tutorial-getting-started/trpc",draft:!1,editUrl:"https://github.com/ardsh/slonik-trpc/tree/main/docs/docs/tutorial-getting-started/trpc.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Offset-based pagination",permalink:"/docs/tutorial-getting-started/pagination"},next:{title:"Filtering",permalink:"/docs/tutorial-getting-started/filtering"}},l={},c=[],u={toc:c};function p(t){let{components:e,...r}=t;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"usage-with-trpc"},"Usage with tRPC"),(0,o.kt)("p",null,"Add a query that uses getLoadArgs and loadPagination from the postsLoader to return data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="postsRouter.ts"',title:'"postsRouter.ts"'},"getPosts: publicProcedure\n    .input(postsLoader.getLoadArgs())\n    .query(({ input, ctx }) => {\n        return postsLoader.loadPagination({\n            ...input,\n            ctx,\n        });\n    }),\n")),(0,o.kt)("p",null,"Now the API is accessible from your tRPC query. The getLoadArgs returns a zod type that will allow you to restrict user input further than what the makeQueryLoader API allows."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const posts = await client.getPosts.query({\n    select: ["id", "title", "content"], // Will query only these 3 columns.\n    take: 25,\n    skip: 0,\n});\n')))}p.isMDXComponent=!0}}]);